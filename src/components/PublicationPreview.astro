---
export interface Props {
    title: string;
    authors: string[];
    journal: string;
    volume: string;
    page: string;
    year: string;
    doi?: string;
    keywords?: string[];
}

const { title, authors, journal, volume, page, year, doi, keywords } = Astro.props;
---

<article class="not-prose group relative flex flex-col items-start">
    <h2 class="text-base font-semibold tracking-tight text-zinc-800 dark:text-zinc-100">
        <div
            class="absolute -inset-y-6 -inset-x-4 z-0 scale-95 bg-zinc-50 opacity-0 transition group-hover:scale-100 group-hover:opacity-100 dark:bg-zinc-800/50 sm:-inset-x-6 sm:rounded-2xl"
        >
        </div>
        <a href={`https://doi.org/${doi}`} target="_blank">
            <span class="absolute -inset-y-6 -inset-x-4 z-20 sm:-inset-x-6 sm:rounded-2xl"></span>
            <span class="relative z-10">{title}</span>
        </a>
    </h2>
    <p class="relative z-10 mt-2 text-sm text-zinc-600 dark:text-zinc-400">
        {authors.join(", ")}
    </p>
    <div class="relative z-10 mt-2 flex text-sm text-emerald-600 dark:text-emerald-400">
        <p class="italic">{journal}</p>
        <p class="ml-2 font-semibold">{volume},</p>
        <p class="ml-2">{page}</p>
        <p class="ml-2 font-semibold">({year})</p>
    </div>
    <div class="relative z-10 mt-2 flex text-sm text-zinc-600 dark:text-zinc-400">
        {keywords?.length && keywords.map((k) => <p class="mr-2">{k}</p>)}
    </div>
</article>
